<?php
global $semaphore, $card, $debug;
$semaphore = __FILE__;

include_once 'common.php';

const RYL_SQ_W = 500;
const RYL_SQ_H = 820;
const RYL_SQ_S = 6;
const RYL_FC_W = 490;
const RYL_FC_H = 810;
const RYL_BX_W = 7;
// const RYL_BX_G = 3;
const ACE_W = 500;
const ACE_H = 500;
const ACE_INF_H = 100;

$deck = [
  "s1", "s2", "s3", "s4", "s5", "s6", "s7", "s8", "s9", "s0", "sj", "sq", "sk",
  "h1", "h2", "h3", "h4", "h5", "h6", "h7", "h8", "h9", "h0", "hj", "hq", "hk",
  "c1", "c2", "c3", "c4", "c5", "c6", "c7", "c8", "c9", "c0", "cj", "cq", "ck",
  "d1", "d2", "d3", "d4", "d5", "d6", "d7", "d8", "d9", "d0", "dj", "dq", "dk",
  "j1", "jk"
];
$gaps = [ 's' => 0, 'h' => 1, 'c' => 3, 'd' => 2, 'j' => 3 ];
// Back / Spanish Red / Spanish Blue / {suggested by ChatGPT}
$colors = [ 's' => '#000', 'h' => '#E60026', 'c' => '#0070B8', 'd' => '#00B050', 'j' => '#000' ];

$classes = [
  's' => ['skn' => '#FFDCB9', 'hir' => '#F6AD11', 'mtl' => '#B87333', 'cl1' => '#9162D5', 'cl2' => '#388E9E'],
  'h' => ['skn' => '#E6BB91', 'hir' => '#EF7C67', 'mtl' => '#FFD700', 'cl1' => '#FF6400', 'cl2' => '#FCAC05'],
  'c' => ['skn' => '#C78E63', 'hir' => '#4B371A', 'mtl' => '#D9D9D9', 'cl1' => '#11809F', 'cl2' => '#FA6706'],
  'd' => ['skn' => '#A46135', 'hir' => '#444444', 'mtl' => '#E6E8FA', 'cl1' => '#439E96', 'cl2' => '#FACD01'],
  'j' => ['skn' => '#CFCFCF', 'hir' => '#5D4437', 'mtl' => '#BABC63', 'cl1' => '#1A26B0', 'cl2' => '#B0261A'],
  'x' => ['skn' => '#EEEEEE', 'hir' => '#AAAAAA', 'mtl' => '#CCCCCC', 'cl1' => '#888888', 'cl2' => '#666666'],
];



// ---------- Functions ---------

function __($n) {
  $r = round((float)$n, 2);
  if (fmod($r, 1) == 0) {
    return (int)$r;
  }
  return $r;
}

function gap_line($gap, $width, $y, $color, $isroyal, $isrotate = false) {
  if ($gap == 0) return '';
  $z = ($gap * 2) + 1;
  $l = $width / $z;

  $r = '<g>' . PHP_EOL;
  // $r .= sprintf('<!-- Gap_Line %s %s %s %s %s %s %s -->' . PHP_EOL, $gap, $width, $y, $color, $isroyal, $z, $l);

  $x = (CARD_BLEED_W - $width) / 2;
  for ($i = 0; $i < $z; $i++) {
    // $r .= '<!-- ' . $i . ' ' . $x . ' -->' . PHP_EOL;
    if ($i % 2 != 0) {
      $extra = $isrotate ? sprintf(' transform="rotate(180 %s %s)"', __(CARD_BLEED_W/2), __($y)) : '';
      $extra .= $isroyal ? ' stroke-linecap="butt"' : sprintf(' stroke-dasharray="%s %s"', __(RYL_SQ_S/3), __(RYL_SQ_S*3));
      $r .= sprintf('<line x1="%s" y1="%s" x2="%s" y2="%s" stroke-width="%s" stroke="%s"%s />' . PHP_EOL,
        __($x), __($y), __($x+$l), __($y), ($isroyal ? RYL_SQ_S+2 : RYL_SQ_S), $color, $extra);
    }
    $x += $l;
  }
  $r .= '</g>' . PHP_EOL;

  return $r;
}

// ---------- Code starts here ---------

/* Note: `$card` is populated in `common.php` */

if ($card == 0) {
  if ($is_command_line) {
    echo 'You must specify a card from 1 to 54' . PHP_EOL;
    echo 'Usage: php ' . basename(__FILE__) . ' --card=54' . PHP_EOL;
  } else {
    @readfile(PARTS_FOLDER . 'template.svg');
  }
  exit(0);
}

header('Content-Type: image/svg+xml; charset=UTF-8');
header('X-Content-Type-Options: nosniff');
header('Content-Disposition: inline; filename="card.svg"');


if ($card >= 1 && $card <= 54) {
  $place = $deck[$card - 1];
  $p1 = substr($place, 0, 1);
  $p2 = substr($place, 1, 1);
} else {
  $place = 'ERROR';
  $p1 = $p2 = false;
}

// Alternate Joker colors
if ($card == 53) { $classes['j'] = $classes['x']; }

?>
<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 <?= CARD_BLEED_W ?> <?= CARD_BLEED_H ?>" version="1.1">
<?php
  $cf1 = 'transparent';
?>
<style>
  @import url("https://fonts.googleapis.com/css2?family=Ubuntu+Sans:ital,wght@0,100..800;1,100..800");
  @import url("https://fonts.googleapis.com/css2?family=Ubuntu+Sans+Mono:ital,wght@0,400..700;1,400..700");
  text { font-family: "Ubuntu Sans", system-ui, -apple-system, Segoe UI, Roboto, sans-serif; }
  .monospace { font-family: "Ubuntu Sans Mono", monospace; }
  .cf1 { fill: <?= $cf1 ?>; }
<?php
foreach ($classes[$p1] as $name => $value) {
  printf('  .%s { fill: %s; }' . PHP_EOL, $name, $value);
}

?>
</style>
<defs>
<?php
  // <!-- Suits -->
  switch ($p1) {
    case 's':
      print('<g id="s">');
      print('<circle class="cf1" cx="50" cy="41" r="29" />');
      print('<path d="M50,0 C50.4789062,0 51.43125,0.553515625 52.0507812,1.24765625 C67.3585937,18.5181641 95.5757813,28.3005859 95.5757813,53.1605469 C95.5757813,54.4373047 95.521875,55.7679687 95.4060547,57.1523437 C94.1707031,71.7472656 83.5925781,80.0269531 72.1583984,80.0269531 C65.6691406,80.0269531 59.1667432,77.2739832 55.0466261,71.0026942 C56.9759229,83.1269129 59.2942384,94.3671645 59.9885743,96.0376723 C61.1741212,98.8831801 60.6995118,100.000195 59.9885743,100.000195 L59.9885743,100.000195 L40.0837891,100.000195 C39.3728516,100.000195 38.7901979,98.8831801 39.9778932,96.0376723 C40.6743776,94.3671645 43.0659619,83.1269129 44.999751,71.0026942 C40.8774853,77.2739832 34.9066406,80.0269531 28.4175781,80.0269531 C16.9855469,80.0269531 6.40507812,71.7472656 5.17207031,57.1523437 C5.05605469,55.7679687 5,54.4373047 5,53.1605469 C5,28.3005859 32.7224389,18.5181641 48.0302514,1.24765625 C48.6521264,0.553515625 49.5212891,0 50,0 Z M50,12 C33.9798387,12 21,24.9798387 21,41 C21,57.0201613 33.9798387,70 50,70 C66.0201613,70 79,57.0201613 79,41 C79,24.9798387 66.0201613,12 50,12 Z M47.2863785,13 L48.1144931,17.3210626 C50.5009523,17.1266941 52.9210404,17.2696157 55.3471338,17.83433 L55.3471338,17.83433 L56.7766072,13.7382877 L56.7766072,13.7379271 L61.6588199,15.4448117 L60.2289862,19.540854 C62.4785272,20.6110226 64.4616784,22.0074225 66.207745,23.6469934 L66.207745,23.6469934 L69.5442239,20.7818313 L72.8558413,24.6809809 L69.5193624,27.546143 C70.8913062,29.5470445 72.0115128,31.7472428 72.7213253,34.0676443 L72.7213253,34.0676443 L77.0388106,33.2389638 L78,38.331971 L73.611053,39.1358897 C73.7978141,41.505334 73.6571728,43.9663732 73.0982105,46.3745229 L73.0982105,46.3745229 L77.2625637,47.8304234 L75.5570921,52.7169216 L71.3926188,51.2609009 C70.3363073,53.4659074 68.9193247,55.4529855 67.3153407,57.1724915 L67.3153407,57.1724915 L70.2498327,60.5369775 L66.3289295,63.9231 L63.4661394,60.5840971 C61.4670144,61.9571776 59.2215569,62.981068 56.9030764,63.691709 L56.9030764,63.691709 L57.7311909,68.0126514 L52.7139818,69 L51.8859873,64.6790576 C49.4997684,64.8735463 47.07944,64.7305046 44.6531064,64.1661508 L44.6531064,64.1661508 L43.1986514,68.3335938 L38.3160784,66.6267091 L39.7711339,62.4586651 C37.5215929,61.3884966 35.5383216,59.992337 33.7923751,58.3527662 L33.7923751,58.3527662 L30.4558962,61.2180485 L27.1443989,57.3186585 L30.4805175,54.4533762 C29.1086938,52.4525949 27.9887274,50.2520359 27.2789149,47.9317547 L27.2789149,47.9317547 L22.9615497,48.7606755 L22,43.6676684 L26.3894274,42.8641103 C26.2041075,40.5188268 26.3314174,38.0809869 26.8766879,35.6971181 L26.8766879,35.6971181 L22.7122145,34.2414581 L24.4180464,29.3549599 L28.5823997,30.8109806 C29.643155,28.5779668 31.0643412,26.5646843 32.6851397,24.8272681 L32.6851397,24.8272681 L29.7506477,21.4630225 L33.671671,18.0766596 L36.534221,21.4159029 C38.533466,20.0429426 40.7786833,19.0188118 43.0970437,18.3084112 L43.0970437,18.3084112 L42.2690493,13.9874688 L47.2863785,13 Z M63.3279998,31.7138494 C62.9479258,31.8668747 62.5583073,31.9939533 62.1617196,32.0942451 C62.1713875,32.1086928 62.1815734,32.1229642 62.1910687,32.1374118 L62.6182703,32.7923126 L61.9797554,33.2333179 C60.2177754,34.4506193 58.1300207,34.905808 56.3262614,34.7800078 C56.4280336,34.9373461 56.517203,35.0964463 56.5899714,35.258806 L56.9104805,35.9744045 L56.2118001,36.3070525 C54.6520697,37.0494319 52.95906,37.2653536 51.4365338,37.101232 C51.7234641,37.5559801 51.9389208,37.9959283 52.0507063,38.4379907 L52.2433743,39.1998392 L51.4984258,39.4024585 C50.0737875,39.7895494 48.6191095,39.7788899 47.3066882,39.4951348 C47.5137718,39.8567662 47.6714799,40.2111737 47.7614261,40.5669027 L47.9541804,41.3287512 L47.2091457,41.5313705 C45.7107031,41.9384591 44.1790269,41.9054233 42.8147268,41.5776206 C43.0909533,42.0616164 43.2897501,42.5190955 43.3680431,42.9886437 L43.5052931,43.8118065 L42.6926692,43.9089757 C40.1612257,44.2121999 37.6704392,43.3180321 36.1636235,42.0431164 C35.8108304,41.7447374 35.4974859,41.4164942 35.2646787,41.0548628 C36.8175035,46.2692261 40.6784598,51.9413328 40.6784598,51.9413328 L37.6158845,58.002028 C41.8884184,60.2532164 46.6959686,61.4120225 52.3387588,60.8663599 C52.1862299,58.0388518 53.7607212,55.9494065 55.1892439,54.3020236 C53.9298236,54.2161307 52.6007424,54.1059234 51.3181017,53.8559088 C49.8929454,53.577968 48.5092231,53.1211056 47.3470863,52.2673736 C46.1848632,51.4137298 45.2725387,50.1438354 44.8475815,48.4176072 L46.3545698,48.0311329 C46.6989898,49.430087 47.3577901,50.3216118 48.2545768,50.9803888 C49.1514498,51.6391657 50.3144499,52.0458138 51.609866,52.2983832 C53.8124273,52.727848 56.3359294,52.6884694 58.4770303,52.9716959 C60.7859388,52.7937433 63.4033579,53.2008319 63.9533076,52.2144283 C65.2971497,49.8041398 64.3895729,46.5824931 63.6563641,44.066314 C65.2501049,44.0125758 66.0887114,43.9174328 67,43.6287444 C66.2570369,40.5894551 65.1130275,38.7938078 63.2275224,37.1537368 C63.368139,35.3519228 63.5895518,33.4493277 63.3279998,31.7138494 Z M33.8857041,39.8511281 L31,41.7359279 L31.837657,43.0716295 L35.1688627,40.8958507 C35.1111342,40.7927001 35.0601792,40.6857521 35.0163338,40.5757122 C34.6507653,40.4929026 34.3238684,40.32235 34.0657693,40.0596497 C34.0017474,39.9938496 33.9416193,39.9242193 33.8857041,39.8511281 Z M38.087455,39.0529843 C37.8300463,39.5990873 37.4403943,40.076564 36.863944,40.3347715 C36.8204384,40.3543287 36.77676,40.3713311 36.733168,40.3889501 C36.8594333,40.5473599 37.000833,40.6925518 37.1552767,40.8223792 C38.0680328,41.594623 39.7402392,42.2792119 41.4414493,42.3598191 C41.3795573,42.2455595 41.3371738,42.1452189 41.2614705,42.0250568 C40.9216255,41.4863538 40.4573923,40.8908293 39.9487902,40.3746787 C39.4401881,39.8586162 38.8828147,39.4234252 38.3938074,39.1824844 C38.2942879,39.1331758 38.1919908,39.0899332 38.087455,39.0529843 Z M42.283336,36.7504363 C41.9476345,37.2329345 41.4979894,37.6259278 40.9137703,37.8130423 C40.5993037,37.9138234 40.2908795,37.9766354 39.9947992,38.0024473 C40.1147851,38.2980072 40.4050819,38.6763767 40.9006496,39.0322819 C42.0115982,39.8302495 43.9711665,40.3954692 45.8688427,40.1731165 C45.7542951,39.9779854 45.6407832,39.7806518 45.4834204,39.5661396 C45.0556146,38.9832128 44.4894365,38.3557096 43.8845867,37.8276662 C43.352419,37.3630513 42.7865862,36.9779866 42.283336,36.7504363 Z M36.6033416,33.4633348 C35.5533355,34.689622 34.9275097,36.331543 34.8610427,37.534661 C34.8204719,38.2696405 35.003731,38.7746911 35.1629928,38.9367865 C35.322341,39.0988819 35.5161312,39.2067987 36.2393268,38.8827841 C36.4534024,38.7868482 36.6641977,38.5301384 36.8202657,38.0152211 C36.9763337,37.5003039 37.0438366,36.7854102 37.02053,36.0446164 C36.997396,35.3038227 36.8882865,34.534398 36.7349808,33.8919187 C36.6963091,33.7298232 36.6481421,33.6073707 36.6033416,33.4633348 Z M46.7446535,34.705303 C46.3676906,35.1070177 45.8989687,35.4118276 45.3327043,35.5215944 C44.9426207,35.5970921 44.5678158,35.6189397 44.2183892,35.5902207 C44.2188208,35.602554 44.2192524,35.6148874 44.2201156,35.6270445 C44.2347902,35.8203257 44.3591784,36.0924522 44.6114078,36.3837835 C44.7068786,36.461836 44.8013998,36.5413861 44.8946263,36.6227862 C45.0106175,36.7245958 45.1246686,36.8286852 45.2367156,36.9349961 C46.3550878,37.7159613 48.2859976,38.2634738 50.1580366,38.0441164 C50.0435752,37.8490733 49.9299771,37.6517398 49.7726142,37.4373157 C49.3448947,36.8543007 48.7788893,36.2268857 48.1739532,35.6987541 C47.7015195,35.2862917 47.2029306,34.9378747 46.7446535,34.705303 Z M41.3847366,30.1477785 C39.919959,31.3989967 38.9723294,33.2387798 38.7744821,34.6105124 C38.6590712,35.4106824 38.8120317,35.9784568 39.0137634,36.2068 C39.2154087,36.4352312 39.541874,36.590279 40.4484149,36.2999167 C40.7646943,36.1986071 41.0371227,35.9168782 41.2684625,35.3661061 C41.4998022,34.8155102 41.6439579,34.0424736 41.6851329,33.2312036 C41.7263079,32.4200217 41.6701131,31.5689326 41.5504725,30.8508675 C41.5063626,30.5867576 41.4444706,30.3667836 41.3847366,30.1477785 Z M50.9232704,32.5975338 C50.6097533,32.8505436 50.2462564,33.0378343 49.8294133,33.1185297 C49.3851202,33.2045988 48.9610262,33.2201917 48.5713741,33.1712107 C48.3649811,33.4599872 48.349616,33.6767898 48.3918269,33.8653139 C48.6657071,34.0615706 48.9300475,34.2713397 49.1839064,34.4938741 C49.39753,34.6810676 49.6046823,34.8758183 49.8049845,35.0777701 C51.0484356,35.5842302 52.9401557,35.7341685 54.6590616,35.2095607 C54.5128342,35.0380391 54.3671247,34.864227 54.1753199,34.6811648 C53.6540287,34.1837785 52.9887543,33.6671874 52.3025903,33.2555179 C51.8375802,32.97652 51.3619527,32.7493221 50.9232704,32.5975338 Z M46.6733525,27.9643355 C45.0761589,29.0333725 43.9255028,30.7481483 43.5727097,32.0870213 C43.3669209,32.8681627 43.4541912,33.4502086 43.6284729,33.700928 C43.8028409,33.9517354 44.1092797,34.1445761 45.0428391,33.9637164 C45.3685274,33.9006401 45.6712545,33.6530041 45.9637093,33.1335059 C46.2562505,32.6140076 46.4872449,31.8632591 46.6206105,31.0623844 C46.7538898,30.2615977 46.7950648,29.4096277 46.7579469,28.6823125 C46.7443082,28.4146789 46.7077945,28.1889786 46.6733525,27.9643355 Z M55.8477853,30.3764741 C55.4253313,30.7486769 54.9177651,31.0123462 54.3297478,31.0612391 C54.2627629,31.0667891 54.1966412,31.0698725 54.1307784,31.0726034 C53.7713386,31.580385 53.7896386,31.8746234 53.8900297,32.1086928 C54.0108788,32.3904217 54.454913,32.7665007 55.2168666,32.9887652 C56.5230728,33.3698657 58.5561864,33.2467084 60.2768188,32.4002002 C60.1058173,32.2543144 59.9349885,32.106138 59.7172011,31.9561997 C59.1254721,31.5491992 58.3887241,31.1463392 57.6474011,30.850427 C57.0182952,30.5993553 56.3843553,30.4295955 55.8477853,30.3764741 Z M50.4552391,21.0000225 C50.1392186,20.9992755 49.8234189,21.0171594 49.5094222,21.0536083 C44.1245585,21.6815519 39.0251577,26.2346716 36.3625929,31.4936111 C36.3727787,31.485242 36.382792,31.4766087 36.3930641,31.4683277 L37.0372762,30.9486533 L37.5100552,31.6338589 C37.6441977,31.8283734 37.7579685,32.0446474 37.8581869,32.2804787 C38.5425382,30.7399554 39.7253057,29.2349346 41.3423531,28.2206929 L41.9992543,27.8087591 L42.4078969,28.4758171 C42.6238715,28.8284627 42.7799395,29.2424227 42.9010476,29.7105614 C43.7546739,28.2442144 45.1110325,26.8693104 46.8509144,26.0450904 L47.5501991,25.7138519 L47.8801172,26.4250456 L47.918271,26.5115552 L47.918271,26.5115552 C48.762661,25.3546872 49.9273874,24.3148979 51.3476234,23.6421137 L52.0469945,23.3106991 L52.3769125,24.0218047 C52.4939635,24.2741097 52.5798527,24.5518743 52.6448523,24.8513104 C53.3725366,23.906576 54.3344091,23.0411273 55.4772101,22.4071932 C53.8715571,21.5354898 52.1624917,21.0033059 50.4552391,21.0000225 Z M51.1703205,25.5610946 C49.847886,26.4462766 48.8330124,27.7736972 48.322166,28.9642176 C48.3375311,29.7166399 48.2852207,30.5305528 48.1524593,31.3280799 C48.1522003,31.3298418 48.1517687,31.3315157 48.1514235,31.3332776 C48.3305391,31.5661135 48.6507029,31.7327899 49.5398071,31.5605635 C49.8654091,31.4974873 50.1682224,31.2500275 50.4606773,30.7305292 C50.7531321,30.2109429 50.9842129,29.4601063 51.1175785,28.6592316 C51.2508578,27.8584449 51.2920328,27.0063868 51.2549149,26.2790716 C51.2412762,26.0115261 51.2047625,25.7857377 51.1703205,25.5610946 Z M61.5822481,28.1330381 C61.4412601,28.2819716 61.2924543,28.4229848 61.1364876,28.5554552 C60.472508,29.1166226 59.6341605,29.503273 58.7351294,29.3457586 C58.5807524,29.3187855 58.4278235,29.2837956 58.2769387,29.2409251 C58.25966,29.2868923 58.2439688,29.3334647 58.2298938,29.3805562 C59.0830022,29.7225423 59.8991653,30.1690095 60.5858472,30.6413767 C60.6279718,30.6703601 60.6679383,30.6992554 60.709027,30.7282388 C61.9444502,30.6002362 63.4213989,30.0747475 64.6215169,29.1457821 C64.4255687,29.0374249 64.2293615,28.9268652 63.9868864,28.8240579 C63.3278272,28.5447957 62.5272882,28.2990097 61.7432364,28.1590262 C61.6893722,28.1494238 61.6358533,28.1415833 61.5822481,28.1330381 Z M56.4486643,23.6916233 C54.7493532,24.5817387 53.4268323,26.1624334 52.9367892,27.4554968 C52.8502958,27.6838399 52.7927198,27.8965902 52.7581052,28.0902237 C52.7465382,28.2082715 52.7332448,28.3263193 52.7183976,28.4445432 C52.7077801,28.718784 52.7510269,28.9324152 52.8245722,29.0663201 C52.9718354,29.3345704 53.2566077,29.5593898 54.2036331,29.4806325 C54.5339828,29.4531468 54.860707,29.2397799 55.2056449,28.7549031 C55.5504965,28.2699382 55.8582301,27.5484374 56.0740321,26.7665912 C56.289834,25.984657 56.4193152,25.1421131 56.4581596,24.414798 C56.4723162,24.1472524 56.4595407,23.9188212 56.4486643,23.6916233 Z M62.5831377,22.7454794 C60.720335,23.1762656 59.0543437,24.3715432 58.2645948,25.4996921 C57.8039007,26.1577643 57.6859002,26.7343483 57.7632436,27.0314939 C57.8405008,27.3287276 58.0616546,27.6188256 58.9981489,27.7829472 C59.3248731,27.8402092 59.6932902,27.7163471 60.1454385,27.3341895 C60.5976732,26.9520319 61.071488,26.3313121 61.4711533,25.6286637 C61.8707322,24.9261914 62.2015998,24.1429358 62.4162796,23.448304 C62.4952631,23.1928275 62.5383372,22.9681844 62.5831377,22.7454794 Z" />');
      print('</g>');
      break;
    case 'h':
      print('<g id="h">');
      print('<rect class="cf1" x="31" y="20" width="38" height="60" rx="5" />');
      print('<path d="M10.951907,5.44927136 C25.5136257,-6.12904895 45.864407,1.97856823 50.1690945,18.1668495 C54.4735867,1.97856823 74.8261257,-6.12904895 89.3880398,5.44927136 C103.342141,16.5475135 102.217141,38.6438026 88.5542507,56.3613807 C75.930032,72.7332557 56.208157,88.5080604 50.8972195,99.459037 C50.6851101,99.8957557 50.2105007,100.000053 50.1692898,100.000053 C50.1296414,100.000053 49.6552273,99.8957557 49.4448757,99.459037 C44.130032,88.5080604 24.4083523,72.7332557 11.7858914,56.3613807 C-1.87543677,38.6436073 -3.00238989,16.5475135 10.951907,5.44927136 Z M62.668618,21 L37.331382,21 C34.3338965,21 31.890663,23.4695313 32.0037757,26.4601563 C32.0263982,27.0605469 32.0490208,27.6609375 32.0829546,28.25 C32.1508866,32.9999599 32.5485737,37.411569 33.2760158,41.4848274 L34.7416115,35.1853946 L37.8765217,35.1853946 L34.7412959,47.781884 C36.3804209,53.3929709 38.7745743,58.2293481 41.923756,62.2910156 C44.0206242,64.9954582 46.3803949,65.2363281 46.3803949,67.4566406 C46.3803949,69.8242188 44.4574796,71.75 42.093425,71.75 L39.1411846,71.75 C37.1390905,71.75 35.5215794,73.3699219 35.5215794,75.375 C35.5215794,77.3800781 37.1390905,79 39.1411846,79 L60.8588154,79 C62.8609095,79 64.4784206,77.3800781 64.4784206,75.375 C64.4784206,73.3699219 62.8609095,71.75 60.8588154,71.75 L57.906575,71.75 C55.5425204,71.75 53.6196051,69.8242188 53.6196051,67.4566406 C53.6196051,65.2363281 56.446758,64.764509 58.076244,62.2910156 C63.0140172,54.7956768 66.0935877,46.5138492 67.3149557,37.4455328 L64.7416115,47.7835581 L61.8118712,47.7835581 L64.7416115,35.1853946 L67.5792269,35.1858209 C67.8044393,32.9215414 67.9170454,30.6096011 67.9170454,28.25 C67.9509792,27.6609375 67.9736018,27.071875 67.9962243,26.4601563 C68.109337,23.4695313 65.6661035,21 62.668618,21 Z M61.8765217,35.1853946 L58.7416115,47.7835581 L55.8118712,47.7835581 L58.7416115,35.1853946 L61.8765217,35.1853946 Z M55.8765217,35.1853946 L52.7416115,47.7835581 L49.8118712,47.7835581 L52.7416115,35.1853946 L55.8765217,35.1853946 Z M49.8765217,35.1853946 L46.7416115,47.7835581 L43.8118712,47.7835581 L46.7416115,35.1853946 L49.8765217,35.1853946 Z M43.8765217,35.1853946 L40.7416115,47.7835581 L37.8118712,47.7835581 L40.7416115,35.1853946 L43.8765217,35.1853946 Z" />');
      print('</g>');
      break;
    case 'c':
      print('<g id="c">');
      print('<rect class="cf1" x="43.5" y="11" width="12" height="79" rx="5" />');
      print('<path d="M48.5780105,1.00397578 C60.8018386,0.775869181 70.8955886,10.3918854 71.1250808,22.4803763 C71.2520339,29.1989944 71.0123779,35.2645826 66.2697998,39.3695356 C60.9388102,43.0506598 58.8360758,45.5171469 59.9615967,46.7689969 C60.8088623,47.9796423 62.4942139,46.9567358 64.4606201,45.410401 C68.4028076,41.2716472 71.2457839,38.640792 77.4489089,38.5252901 C89.6725417,38.2989218 99.7662917,47.9147449 99.9963699,60.0028495 C100.226057,72.0894089 90.5020339,82.0720181 78.2793777,82.2999315 C67.0172683,82.509496 59.9829346,75.734573 58.3762939,64.994055 C58.1675049,64.0561332 57.8124268,61.9967999 57.1130127,62.0630493 C56.288208,62.1416602 56.0303955,61.9583637 56.0997314,65.6026611 C56.1831299,83.4562035 60.1237061,98.9229343 59.9615967,98.9260247 C59.3839812,98.9362363 53.4576402,98.9295766 51.4137746,98.9269513 L37.6698074,98.9260247 C37.4860183,98.9291151 43.7933105,83.4467392 43.1999512,65.6026611 C43.1312012,61.9568185 42.8806152,62.1509312 42.0526855,62.1047691 C41.3519043,62.0630493 41.0737793,64.134744 40.9009277,65.0850272 C40.9009277,65.0850272 40.8946777,65.0803917 40.8931152,65.0850272 C39.7030762,75.8717073 33.8131667,83.1242829 22.5504714,83.3321091 C10.3284011,83.5602157 0.233088603,73.9440063 0.00398704037,61.8574469 C-0.22570046,49.7693423 9.49734642,39.7849948 21.7211745,39.5586265 C27.923323,39.4446698 30.3080566,41.5858974 34.4027832,45.5768937 C36.4260254,47.0479012 38.1486816,48.0103527 38.9508301,46.7689969 C40.2407653,45.2176362 37.0744786,43.3217192 34.0391302,41.2285626 L33.6355957,40.9483192 C27.7074707,37.1176348 27.0035964,30.8283824 26.8610183,23.3010578 C26.6319167,11.2129533 36.3543777,1.23034406 48.5780105,1.00397578 Z M45.5840977,83 C44.4319069,83.0002778 43.5001927,84.3436434 43.5061298,85.9960589 L43.5,86.0048968 C43.4998074,87.6661502 44.4312101,89.0090667 45.5772732,89 L53.4219759,88.9980626 C54.5741666,88.9977848 55.5058809,87.6544192 55.499972,86.0020037 C55.4940068,84.3495882 54.5687338,82.9978339 53.4226707,83.0069466 L45.5840977,83 Z M51.8089761,12.0008315 L47.1901611,12 C46.2060069,12 45.2722223,12.6137021 44.5789193,13.7170827 C43.8856163,14.8204632 43.5,16.3065663 43.5,17.872832 L43.5019924,45.9054281 C43.5021252,47.7742679 43.6308685,49.6342315 43.8882196,51.4497222 L46.2771069,68.2608104 C46.5120808,69.9339092 46.6352215,71.6425848 46.6353442,73.3690368 L46.6302236,79.9989672 L52.3673957,80 L52.3669238,73.3611693 C52.3668024,71.6525158 52.4841078,69.9349842 52.7244351,68.2530718 L55.1109328,51.4428431 C55.3680259,49.6274451 55.4965048,47.7675278 55.496372,45.898688 L55.499972,17.8749922 C55.499972,16.3265249 55.1139219,14.8224845 54.4204621,13.7188543 C53.7270022,12.6152241 52.7931304,12.0010086 51.8089761,12.0008315 Z M51,48 C52.1045695,48 53,48.8954305 53,50 C53,51.1045695 52.1045695,52 51,52 C49.8954305,52 49,51.1045695 49,50 C49,48.8954305 49.8954305,48 51,48 Z M47,38 C48.1045695,38 49,38.8954305 49,40 C49,41.1045695 48.1045695,42 47,42 C45.8954305,42 45,41.1045695 45,40 C45,38.8954305 45.8954305,38 47,38 Z M52.5,27 C53.6045695,27 54.5,27.8954305 54.5,29 C54.5,30.1045695 53.6045695,31 52.5,31 C51.3954305,31 50.5,30.1045695 50.5,29 C50.5,27.8954305 51.3954305,27 52.5,27 Z M46,19 C47.1045695,19 48,19.8954305 48,21 C48,22.1045695 47.1045695,23 46,23 C44.8954305,23 44,22.1045695 44,21 C44,19.8954305 44.8954305,19 46,19 Z" />');
      print('</g>');
      break;
    case 'd':
      print('<g id="d">');
      print('<polygon class="cf1" points="50 2 83 50 50 98 17 50" />');
      print('<path d="M49.9375,0 L85.8525391,50 L49.9375,100 L14.0224609,50 L49.9375,0 Z M48.6773523,8.89632653 C48.614376,8.95930279 48.5547143,9.02725086 48.4991957,9.10099938 L42.0449573,18.1803536 L42.0449573,59.8590392 L35.6114348,59.8590392 C34.5806128,59.8590392 33.7436914,60.6943034 33.7436914,61.7267826 L33.7445201,64.8300209 C33.7445201,65.7199749 34.3726254,66.487291 35.2460068,66.6613043 L46.2651956,68.8654736 L46.264367,77.6862937 L42.6415746,78.8944436 C42.490763,78.9441617 41.5320322,79.3178761 41.5328609,80.4323902 L41.5320322,83.2870379 C41.5328609,84.1827924 42.2587452,84.9086767 43.153671,84.9086767 L56.8460366,84.9086767 C57.2934995,84.9086767 57.698702,84.7272057 57.9920388,84.4338688 C58.2853756,84.140532 58.4668467,83.7353295 58.4676753,83.2870379 L58.4676753,80.4315616 C58.4674181,79.7337876 58.0208893,79.1143873 57.3589616,78.8936149 L53.7361692,77.685465 L53.7353406,68.8646449 L64.7545294,66.6604757 C65.6270822,66.4856337 66.2560162,65.7191463 66.2560162,64.8291923 L66.2568448,61.725954 C66.2568448,60.695132 65.4199234,59.8582106 64.3891014,59.8582106 L57.9555789,59.8582106 L57.9547502,18.1803536 L51.5005119,9.10099938 C50.8052871,8.17541404 49.4670415,8.10663733 48.6773523,8.89632653 Z M49.9990252,16.6979255 L52.3291469,19.9760058 L52.3299755,59.8590392 L47.669732,59.8590392 L47.669732,19.9751771 L49.9990252,16.6979255 Z" />');
      print('</g>');
      break;
  }
  if ($card <= 52) print(PHP_EOL);

  if ($card == 1) {
    // Ace of Spades
    readfile(PARTS_FOLDER . 'ace-spades.xml');
  }

  // <!-- Value -->
  if ($card <= 52) switch ($p2) {
    case '1':
      print('<path id="1" d="M56.7530696,-2.65742983e-12 L91.1323329,91.1323329 L69.1678035,91.1323329 L63.574352,74.3519782 L27.5579809,74.3519782 L21.9645293,91.1323329 L0,91.1323329 L34.3792633,-2.65742983e-12 L56.7530696,-2.65742983e-12 Z M52.449,14.572 L44.923,14.572 C42.438,20.891 38.746,21.459 31.362,21.459 L31.362,29.553 L42.509,29.553 L42.509,62 L52.449,62 L52.449,14.572 Z" />');
      break;
    case '2':
      print('<path id="2" d="M84.3042292,95.7694407 L84.3042292,79.6712142 L39.6930423,79.6712142 C66.2960437,63.7094134 83.622101,48.2933151 83.622101,29.3301501 C83.622101,12.4133697 69.9795362,3 51.6984993,3 C35.6002729,3 23.0491132,10.2305593 18.4106412,23.0545703 L36.0095498,29.3301501 C38.1923602,20.4624829 44.6043656,17.4611187 50.7435198,17.4611187 C58.1105048,17.4611187 63.9768076,21.5538881 63.9768076,29.0572988 C63.9768076,43.6548431 41.739427,60.5716235 15,79.6712142 L15,95.7694407 L84.3042292,95.7694407 Z" />');
      break;
    case '3':
      print('<path id="3" d="M49.6521146,96.4065484 C68.0695771,96.4065484 84.9863574,87.1296044 84.9863574,68.3028649 C84.9863574,59.1623465 79.6657572,50.7039563 68.2060027,47.0204638 C77.0736698,43.473397 83.3492497,36.5156889 83.3492497,26.1473397 C83.3492497,9.36698499 66.7053206,2 50.1978172,2 C34.9181446,2 21.0027285,8.27557981 15.9549795,22.0545703 L33.5538881,28.3301501 C35.3274216,19.8717599 41.739427,16.4611187 49.106412,16.4611187 C56.8826739,16.4611187 63.840382,20.2810368 63.840382,27.6480218 C63.840382,35.8335607 55.6548431,40.744884 42.5579809,40.744884 L39.1473397,40.744884 L39.1473397,54.5238745 L42.5579809,54.5238745 C55.5184175,54.5238745 65.2046385,58.0709413 65.2046385,68.5757162 C65.2046385,77.0341064 59.20191,81.9454297 50.0613915,81.9454297 C41.8758527,81.9454297 34.9181446,78.1255116 32.5989086,69.1214188 L15,75.3969986 C20.1841746,89.585266 33.6903138,96.4065484 49.6521146,96.4065484 Z" />');
      break;
    case '4':
      print('<path id="4" d="M74.8472033,95.1323329 L74.8472033,75.3506139 L88.0804911,75.3506139 L88.0804911,58.2974079 L74.8472033,58.2974079 L74.8472033,4 L55.4747613,4 L11,60.8894952 L11,75.3506139 L55.4747613,75.3506139 L55.4747613,95.1323329 L74.8472033,95.1323329 Z M55.4747613,58.2974079 L32.0095498,58.2974079 L55.4747613,29.3751705 L55.4747613,58.2974079 Z" />');
      break;
    case '5':
      print('<path id="5" d="M49.106412,96.7694407 C68.3424284,96.7694407 85.2592087,85.8553888 85.2592087,64.9822647 C85.2592087,43.9727149 69.8431105,33.3315143 53.6084584,33.3315143 C47.0600273,33.3315143 39.5566166,35.1050477 35.3274216,38.3792633 L37.5102319,19.9618008 L81.1664393,19.9618008 L81.1664393,4 L21.5484311,4 L15.8185539,50.6575716 L33.1446112,56.9331514 C36.0095498,51.3396999 41.3301501,47.792633 48.5607094,47.792633 C57.1555252,47.792633 65.3410641,53.2496589 65.3410641,64.9822647 C65.3410641,76.1691678 57.9740791,82.308322 48.1514325,82.308322 C40.6480218,82.308322 34.5088677,78.8976808 31.9167804,69.893588 L15,75.8963165 C20.3206003,89.26603 32.8717599,96.7694407 49.106412,96.7694407 Z" />');
      break;
    case '6':
      print('<path id="6" d="M50.2892224,97.4065484 C70.6166439,97.4065484 85.2141883,83.9004093 85.2141883,64.9372442 C85.2141883,46.792633 71.7080491,34.2414734 54.7912688,34.2414734 C45.377899,34.2414734 38.2837653,37.9249659 33.9181446,42.4270123 C34.3274216,26.4652115 41.148704,17.4611187 51.5170532,17.4611187 C56.9740791,17.4611187 61.6125512,19.9167804 63.6589359,24.1459754 L80.9849932,17.8703956 C76.2100955,9.00272851 67.888131,3 52.744884,3 C24.9140518,3 14,25.9195089 14,53.3410641 C14,78.3069577 25.5961801,97.4065484 50.2892224,97.4065484 Z M50.1527967,82.8090041 C40.739427,82.8090041 34.6002729,76.1241473 34.6002729,65.8922237 C34.6002729,55.6603001 40.739427,48.9754434 50.0163711,48.9754434 C59.5661664,48.9754434 65.2960437,55.9331514 65.2960437,65.8922237 C65.2960437,76.1241473 59.5661664,82.8090041 50.1527967,82.8090041 Z" />');
      break;
    case '7':
      print('<polygon id="7" points="83.3942701 4 83.3942701 20.0982265 47.9236016 95.1323329 25.5497954 95.1323329 62.9304229 20.0982265 16 20.0982265 16 4" />');
      break;
    case '8':
      print('<path id="8" d="M49.9713506,97.4065484 C70.9809004,97.4065484 86.9427012,86.6289222 86.9427012,68.4843111 C86.9427012,57.4338336 81.3492497,50.2032742 71.1173261,44.6098226 C74.255116,40.2442019 76.0286494,34.9236016 76.0286494,29.0572988 C76.0286494,14.7326057 65.2510232,3 49.9713506,3 C34.691678,3 23.9140518,14.7326057 23.9140518,29.0572988 C23.9140518,34.9236016 25.8240109,40.2442019 28.8253752,44.6098226 C18.5934516,50.2032742 13,57.4338336 13,68.4843111 C13,86.6289222 28.9618008,97.4065484 49.9713506,97.4065484 Z M49.9713506,39.425648 C44.377899,39.425648 39.739427,34.787176 39.739427,29.1937244 C39.739427,23.4638472 44.377899,18.9618008 49.9713506,18.9618008 C55.5648022,18.9618008 60.2032742,23.4638472 60.2032742,29.1937244 C60.2032742,34.787176 55.5648022,39.425648 49.9713506,39.425648 Z M49.9713506,81.308322 C39.8758527,81.308322 33.0545703,75.9877217 33.0545703,67.9386085 C33.0545703,59.8894952 39.8758527,55.1145975 49.9713506,55.1145975 C60.0668486,55.1145975 66.888131,59.8894952 66.888131,67.9386085 C66.888131,75.9877217 60.0668486,81.308322 49.9713506,81.308322 Z" />');
      break;
    case '9':
      print('<path id="9" d="M56.5634379,96.3601637 L75.526603,60.8894952 C81.2564802,50.2482947 83.1664393,43.8362892 83.1664393,37.0150068 C83.1664393,18.8703956 68.159618,4 49.8785812,4 C31.5975443,4 17,18.8703956 17,36.8785812 C17,55.7053206 32.6889495,70.5757162 51.3792633,69.7571623 L36.2360164,96.3601637 L56.5634379,96.3601637 Z M50.1514325,52.840382 C42.1023192,52.840382 34.3260573,46.4283765 34.3260573,37.0150068 C34.3260573,28.8294679 40.7380628,21.3260573 50.1514325,21.3260573 C60.2469304,21.3260573 65.9768076,29.9208731 65.9768076,37.1514325 C65.9768076,45.7462483 58.8826739,52.840382 50.1514325,52.840382 Z" />');
      break;
    case '0':
      print('<path id="0" d="M29.3768546,95.7694407 L29.3768546,4.63710778 L18.892186,4.63710778 C15.4302671,16.7789905 10.2868447,17.8703956 0,17.8703956 L0,33.4229195 L15.529179,33.4229195 L15.529179,95.7694407 L29.3768546,95.7694407 Z M72.1068249,97.4065484 C90.4055391,97.4065484 100,79.3983629 100,50.0668486 C100,20.5989086 90.4055391,3 72.1068249,3 C53.8081108,3 44.1147379,20.5989086 44.1147379,50.0668486 C44.1147379,79.3983629 53.8081108,97.4065484 72.1068249,97.4065484 Z M84.7675569,63.9822647 L63.6993076,22.5088677 C65.677547,19.3710778 68.4470821,17.5975443 72.1068249,17.5975443 C82.3936696,17.5975443 85.6577646,33.5593452 85.6577646,50.0668486 C85.6577646,55.3874488 85.3610287,60.0259209 84.7675569,63.9822647 Z M72.1068249,82.8090041 C63.6993076,82.8090041 58.5558853,73.53206 58.5558853,50.0668486 C58.5558853,45.0190996 58.8526212,40.1077763 59.5450049,35.7421555 L80.8110781,77.6248295 C78.5361029,81.1718963 75.6676558,82.8090041 72.1068249,82.8090041 Z" />');
      break;
    case 'j':
      print('<path id="j" d="M49.1514325,96.7694407 C71.6616644,96.7694407 83.6671214,83.5361528 83.6671214,61.1623465 L83.6671214,4 L63.4761255,4 L63.4761255,61.1623465 C63.4761255,76.0327422 57.8826739,80.6712142 49.2878581,80.6712142 C40.5566166,80.6712142 35.6452933,73.0313779 34.5538881,64.3001364 L16,70.9849932 C19.2742156,86.8103683 30.4611187,96.7694407 49.1514325,96.7694407 Z" />');
      break;
    case 'q':
      print('<path id="q" d="M89.904502,100 L100.682128,88.4038199 L85.9481583,74.3519782 C90.5866303,66.9849932 93.3151432,57.8444748 93.3151432,47.2032742 C93.3151432,18.9631651 74.2155525,0 46.6575716,0 C19.0995907,0 7.10542736e-15,18.9631651 7.10542736e-15,47.2032742 C7.10542736e-15,75.4433834 19.0995907,94.4065484 46.6575716,94.4065484 C57.7080491,94.4065484 67.2578445,91.4051842 74.8976808,85.9481583 L89.904502,100 Z M46.6575716,77.7626194 C32.8785812,77.7626194 21.4188267,67.2578445 21.4188267,47.2032742 C21.4188267,27.148704 32.8785812,16.6439291 46.6575716,16.6439291 C60.4365621,16.6439291 71.8963165,27.148704 71.8963165,47.2032742 C71.8963165,51.8417462 71.2141883,55.9345157 70.1227831,59.6180082 L51.568895,42.2919509 L40.7912688,53.7517053 L61.1186903,72.9877217 C57.1623465,76.1255116 51.9781719,77.7626194 46.6575716,77.7626194 Z" />');
      break;
    case 'k':
      print('<polygon id="k" points="29.1909959 95.1323329 29.1909959 67.9836289 39.2864939 56.9331514 66.7080491 95.1323329 90.1732606 95.1323329 52.2469304 42.8813097 88.1268759 4 63.4338336 4 29.1909959 41.6534789 29.1909959 4 9 4 9 95.1323329" />');
      break;
  }

  // <!-- Royals -->
  $temp = $p2;
  if ($card > 52) $temp = "f";
  switch ($temp) {
    case 'j':
      print(PHP_EOL . '<!-- Jack -->' . PHP_EOL);
      readfile(PARTS_FOLDER . 'royal-jack.xml');
      break;
    case 'q':
      print(PHP_EOL . '<!-- Queen -->' . PHP_EOL);
      readfile(PARTS_FOLDER . 'royal-queen.xml');
      break;
    case 'k':
      print(PHP_EOL . '<!-- King -->' . PHP_EOL);
      readfile(PARTS_FOLDER . 'royal-king.xml');
      break;
    case 'f':
      print(PHP_EOL . '<!-- Joker -->' . PHP_EOL);
      readfile(PARTS_FOLDER . 'royal-joker.xml');
      break;
  }

  // <!-- Joker Word -->
  if ($card > 52) { ?>
<path id="w" d="M49.1514325,96.7694407 C71.6616644,96.7694407 83.6671214,83.5361528 83.6671214,61.1623465 L83.6671214,4 L63.4761255,4 L63.4761255,61.1623465 C63.4761255,76.0327422 57.8826739,80.6712142 49.2878581,80.6712142 C40.5566166,80.6712142 35.6452933,73.0313779 34.5538881,64.3001364 L16,70.9849932 C19.2742156,86.8103683 30.4611187,96.7694407 49.1514325,96.7694407 Z" />
<path id="o" d="M49.6575716,97.4065484 C77.2155525,97.4065484 96.3151432,78.4433834 96.3151432,50.2032742 C96.3151432,21.9631651 77.2155525,3 49.6575716,3 C22.0995907,3 3,21.9631651 3,50.2032742 C3,78.4433834 22.0995907,97.4065484 49.6575716,97.4065484 Z M49.6575716,80.7626194 C35.8785812,80.7626194 24.4188267,70.2578445 24.4188267,50.2032742 C24.4188267,30.148704 35.8785812,19.6439291 49.6575716,19.6439291 C63.4365621,19.6439291 74.8963165,30.148704 74.8963165,50.2032742 C74.8963165,70.2578445 63.4365621,80.7626194 49.6575716,80.7626194 Z" />
<polygon id="g" points="29.1909959 95.1323329 29.1909959 67.9836289 39.2864939 56.9331514 66.7080491 95.1323329 90.1732606 95.1323329 52.2469304 42.8813097 88.1268759 4 63.4338336 4 29.1909959 41.6534789 29.1909959 4 9 4 9 95.1323329" />
<polygon id="e" points="84.8949523 95.1323329 84.8949523 77.3969986 36.1909959 77.3969986 36.1909959 57.0695771 66.8867667 57.0695771 66.8867667 39.4706685 36.1909959 39.4706685 36.1909959 21.7353342 84.3492497 21.7353342 84.3492497 4 16 4 16 95.1323329" />
<path id="r" d="M30.1909959,95.1323329 L30.1909959,60.4802183 L40.9686221,60.4802183 L65.3888131,95.1323329 L89.1268759,95.1323329 L62.7967258,58.7066849 C75.7571623,55.7053206 85.0341064,47.3833561 85.0341064,32.2401091 C85.0341064,12.4583902 69.4815825,4 50.3819918,4 L10,4 L10,95.1323329 L30.1909959,95.1323329 Z M49.5634379,43.2905866 L30.1909959,43.2905866 L30.1909959,21.1896317 L49.5634379,21.1896317 C57.7489768,21.1896317 63.888131,24.1909959 63.888131,32.2401091 C63.888131,40.2892224 57.7489768,43.2905866 49.5634379,43.2905866 Z" />
<?php
  }
  print(PHP_EOL);

  // <!-- Bisca values -->
  if (strpos('17890jqk', $p2) !== false) {
    switch ($p2) {
      case '1':
        print('<path id="u" d="M41,96 L41,5 L28.1515152,5 C23.9090909,17.1242515 17.6060606,18.2140719 5,18.2140719 L5,33.744012 L24.030303,33.744012 L24.030303,96 L41,96 Z M95,96 L95,5 L82.1515152,5 C77.9090909,17.1242515 71.6060606,18.2140719 59,18.2140719 L59,33.744012 L78.030303,33.744012 L78.030303,96 L95,96 Z" />');
        break;
      case '7':
        print('<path id="v" d="M29.3768546,95.7694407 L29.3768546,4.63710778 L18.892186,4.63710778 C15.4302671,16.7789905 10.2868447,17.8703956 0,17.8703956 L0,33.4229195 L15.529179,33.4229195 L15.529179,95.7694407 L29.3768546,95.7694407 Z M72.1068249,97.4065484 C90.4055391,97.4065484 100,79.3983629 100,50.0668486 C100,20.5989086 90.4055391,3 72.1068249,3 C53.8081108,3 44.1147379,20.5989086 44.1147379,50.0668486 C44.1147379,79.3983629 53.8081108,97.4065484 72.1068249,97.4065484 Z M84.7675569,63.9822647 L63.6993076,22.5088677 C65.677547,19.3710778 68.4470821,17.5975443 72.1068249,17.5975443 C82.3936696,17.5975443 85.6577646,33.5593452 85.6577646,50.0668486 C85.6577646,55.3874488 85.3610287,60.0259209 84.7675569,63.9822647 Z M72.1068249,82.8090041 C63.6993076,82.8090041 58.5558853,73.53206 58.5558853,50.0668486 C58.5558853,45.0190996 58.8526212,40.1077763 59.5450049,35.7421555 L80.8110781,77.6248295 C78.5361029,81.1718963 75.6676558,82.8090041 72.1068249,82.8090041 Z" />');
        break;
      case '8':
      case '9':
      case '0':
        print('<circle id="t" cx="50" cy="50" r="10" />');
        break;
      case 'k':
        print('<path id="x" d="M74.8472033,95.1323329 L74.8472033,75.3506139 L88.0804911,75.3506139 L88.0804911,58.2974079 L74.8472033,58.2974079 L74.8472033,4 L55.4747613,4 L11,60.8894952 L11,75.3506139 L55.4747613,75.3506139 L55.4747613,95.1323329 L74.8472033,95.1323329 Z M55.4747613,58.2974079 L32.0095498,58.2974079 L55.4747613,29.3751705 L55.4747613,58.2974079 Z" />');
        break;
      case 'j':
        print('<path id="y" d="M49.6521146,96.4065484 C68.0695771,96.4065484 84.9863574,87.1296044 84.9863574,68.3028649 C84.9863574,59.1623465 79.6657572,50.7039563 68.2060027,47.0204638 C77.0736698,43.473397 83.3492497,36.5156889 83.3492497,26.1473397 C83.3492497,9.36698499 66.7053206,2 50.1978172,2 C34.9181446,2 21.0027285,8.27557981 15.9549795,22.0545703 L33.5538881,28.3301501 C35.3274216,19.8717599 41.739427,16.4611187 49.106412,16.4611187 C56.8826739,16.4611187 63.840382,20.2810368 63.840382,27.6480218 C63.840382,35.8335607 55.6548431,40.744884 42.5579809,40.744884 L39.1473397,40.744884 L39.1473397,54.5238745 L42.5579809,54.5238745 C55.5184175,54.5238745 65.2046385,58.0709413 65.2046385,68.5757162 C65.2046385,77.0341064 59.20191,81.9454297 50.0613915,81.9454297 C41.8758527,81.9454297 34.9181446,78.1255116 32.5989086,69.1214188 L15,75.3969986 C20.1841746,89.585266 33.6903138,96.4065484 49.6521146,96.4065484 Z" />');
        break;
      case 'q':
        print('<path id="z" d="M84.3042292,95.7694407 L84.3042292,79.6712142 L39.6930423,79.6712142 C66.2960437,63.7094134 83.622101,48.2933151 83.622101,29.3301501 C83.622101,12.4133697 69.9795362,3 51.6984993,3 C35.6002729,3 23.0491132,10.2305593 18.4106412,23.0545703 L36.0095498,29.3301501 C38.1923602,20.4624829 44.6043656,17.4611187 50.7435198,17.4611187 C58.1105048,17.4611187 63.9768076,21.5538881 63.9768076,29.0572988 C63.9768076,43.6548431 41.739427,60.5716235 15,79.6712142 L15,95.7694407 L84.3042292,95.7694407 Z" />');
        break;
    }
    print(PHP_EOL);
  }

  // Watermark
  if ( ($card == 1) || ($p2 == 'j') || ($p2 == 'q') || ($p2 == 'k') ) {
    readfile(PARTS_FOLDER . 'watermark.xml');
  }
?>
</defs>
<?php

$svg = '';
// Card face
$i = (CARD_BLEED_W - CARD_CUT_LINE_W) / 2;
$svg .= '<rect stroke="none" fill="#FFF" x="' . $i . '" y="' . $i . '" width="' . CARD_CUT_LINE_W . '" height="' . CARD_CUT_LINE_H . '" rx="' . ($i * 1.5) . '" />' . PHP_EOL;

function darkenHtmlColor(string $colour, float $darkenAlpha = 0.5) {
  $trimmed = trim($colour);

  // Track whether the caller used a hash, and remove it for processing
  $hadHash = strlen($trimmed) > 0 && $trimmed[0] === '#';
  if ($hadHash) { $trimmed = substr($trimmed, 1); }

  // Validate length and characters
  $len = strlen($trimmed);
  if ($len !== 3 && $len !== 6) { throw new InvalidArgumentException("Colour must be 3 or 6 hex digits, with an optional leading '#'."); }
  if (!preg_match('/^[0-9a-fA-F]+$/', $trimmed)) { throw new InvalidArgumentException("Colour contains non-hex characters."); }

  // Expand 3-digit to 6-digit
  if ($len === 3) {
    $trimmed = $trimmed[0] . $trimmed[0] . $trimmed[1] . $trimmed[1] . $trimmed[2] . $trimmed[2];
  }

  $hex = strtoupper($trimmed);

  // If no darkening requested, return now
  if ($darkenAlpha <= 0) {
    return $hadHash ? ('#' . $hex) : $hex;
  }

  // Clamp alpha to [0, 1]
  if ($darkenAlpha > 1) {
    $darkenAlpha = 1.0;
  }

  // Extract components
  $r = hexdec(substr($hex, 0, 2));
  $g = hexdec(substr($hex, 2, 2));
  $b = hexdec(substr($hex, 4, 2));

  // Composite black with alpha over the colour: out = (1 - a) * src + a * 0
  $factor = 1.0 - $darkenAlpha;
  $rOut = (int) round($factor * $r);
  $gOut = (int) round($factor * $g);
  $bOut = (int) round($factor * $b);

  $hexOut = sprintf('%02X%02X%02X', $rOut, $gOut, $bOut);

  return $hadHash ? ('#' . $hexOut) : $hexOut;
}

// Watermark
if ( ($card == 1) || ($p2 == 'j') || ($p2 == 'q') || ($p2 == 'k') ) {
  $svg .= '<!-- Watermark -->' . PHP_EOL;
  $svg .= sprintf('<g transform="translate(%s,%s)" opacity="0.1">',
    (CARD_BLEED_W-RYL_SQ_W)/2, (CARD_BLEED_H-RYL_SQ_H)/2 );
  $w = RYL_SQ_W/2;
  $h = RYL_SQ_H/4;
  for ($i = 0; $i < 2; $i++) {
    for ($j = 0; $j < 4; $j++) {
      $x1 = $i * $w;
      $y1 = $j * $h;
      $svg .= sprintf('<g transform="translate(%s,%s)">', $x1, $y1 );
      $xatr = '';
      $q = (($j % 2) * 2) + $i + 1;
      switch ($q) {
        case 2: $xatr .= ' transform="translate('.$w.',0) scale(-1,1)"'; break;
        case 3: $xatr .= ' transform="translate(0,'.$h.') scale(1,-1)"'; break;
        case 4: $xatr .= ' transform="translate('.$w.','.$h.') scale(-1,-1)"'; break;
      }
      $svg .= '<use href="#wm"' . $xatr . ' /></g>';
    }
  }
  $r = RYL_SQ_S * 3;
  if ($card == 1) $r *= 3;
  $sw = $r * 0.75;
  $svg .= sprintf('<rect stroke="#FFF" x="%s" y="%s" width="%s" height="%s" rx="%s" fill="none" stroke-width="%s" />',
    0, 0, RYL_SQ_W, RYL_SQ_H, $r, $sw );
  $svg .= '</g>' . PHP_EOL;
}

// Royalty >> Jack, Queen, King
$gap = $gaps[$p1];
$box_color = darkenHtmlColor($colors[$p1], 0.333);
if ( ($p2 == 'j') || ($p2 == 'q') || ($p2 == 'k') ) {
  $svg .= '<!-- Royal Square -->' . PHP_EOL;
  $svg .= sprintf('<g stroke="%s" stroke-width="%s" fill="none" stroke-linecap="round" stroke-linejoin="round">' . PHP_EOL,
    $box_color, RYL_SQ_S);
  // Box
  $svg .= sprintf('<rect x="%s" y="%s" width="%s" height="%s" rx="%s" />' . PHP_EOL,
    __((CARD_BLEED_W-RYL_SQ_W)/2), __((CARD_BLEED_H-RYL_SQ_H)/2), RYL_SQ_W, RYL_SQ_H, RYL_SQ_S*3);

  $svg .= gap_line($gap, (((RYL_SQ_W))-(RYL_SQ_S*3*2)), ((CARD_BLEED_H-RYL_SQ_H)/2), '#FFF', true);
  $svg .= gap_line($gap, (((RYL_SQ_W))-(RYL_SQ_S*3*2)), (CARD_BLEED_H-((CARD_BLEED_H-RYL_SQ_H)/2)), '#FFF', true, true);

  $svg .= '</g>' . PHP_EOL;
} else {
  $svg .= '<g stroke-linecap="round">' . PHP_EOL;
  $svg .= gap_line($gap, (((RYL_SQ_W))-(RYL_SQ_S*3*2)), ((CARD_BLEED_H-RYL_SQ_H)/2), $colors[$p1], false);
  $svg .= gap_line($gap, (((RYL_SQ_W))-(RYL_SQ_S*3*2)), (CARD_BLEED_H-((CARD_BLEED_H-RYL_SQ_H)/2)), $colors[$p1], false, true);
  $svg .= '</g>' . PHP_EOL;
}

// ----------------------------------------------------------------------
// ----------------------------------------------------------------------

$svg .= '<g fill="' . $colors[$p1] . '">' . PHP_EOL;
if ($card >= 1 && $card <= 52) {

  function face_suit($p1, $p2) {
    $r = '';
    // face
    $r .= sprintf('<use href="#%s" transform="scale(0.8) translate(%s,%s)" />' . PHP_EOL,
      $p2, 82, 82);
    // suite
    $r .= sprintf('<use href="#%s" transform="scale(0.8) translate(%s,%s)" />' . PHP_EOL,
      $p1, 82, 190);
    return $r;
  }
  $svg .= face_suit($p1, $p2);

  // group
  $svg .= sprintf('<g transform="rotate(180 %s %s)">', CARD_BLEED_W/2, CARD_BLEED_H/2) . PHP_EOL;
  $svg .= face_suit($p1, $p2);
  $svg .= '</g>' . PHP_EOL;
} else if ($card == 53 || $card == 54) {

  function face_joker() {
    $r = '';
    $s = 'woger';
    for ($i = 0; $i < 5; $i++) {
      $r .= sprintf('<use href="#%s" transform="scale(0.666) translate(%s,%s)" />' . PHP_EOL,
        $s[$i], 120, 120+($i*120));
    }
    return $r;
  }
  $svg .= face_joker();

  // group
  $svg .= sprintf('<g transform="rotate(180 %s %s)">', CARD_BLEED_W/2, CARD_BLEED_H/2) . PHP_EOL;
  $svg .= face_joker();
  $svg .= '</g>' . PHP_EOL;
}
$svg .= '</g>' . PHP_EOL;

// Pips
if ($card >= 53) $p2 = 'w';
$svg .= '<g fill="' . $colors[$p1] . '">' . PHP_EOL;
$scl = 1.5;

function pips_mirror($s) {
  $r = $s;
  $r .= sprintf('<g transform="rotate(180 %s %s)">', CARD_BLEED_W/2, CARD_BLEED_H/2) . PHP_EOL;
  $r .= $s;
  $r .= '</g>' . PHP_EOL;
  return $r;
}

function pips_1($fc, $scl) {
  return sprintf('<use href="#%s" transform="translate(%s,%s) scale(%s)" />' . PHP_EOL, $fc, ((CARD_BLEED_W-(100*$scl))/2), ((CARD_BLEED_H-(100*$scl))/2), $scl);
}

function pips_2($fc, $scl, $offset = 0) {
  return pips_mirror( sprintf('<use href="#%s" transform="translate(%s,%s) scale(%s)" />' . PHP_EOL, $fc, ((CARD_BLEED_W-(100*$scl))/2), ((CARD_BLEED_H-(100*$scl))/4)+$offset, $scl) );
}

function pips_4($fc, $scl, $offset = 0) {
  $r = sprintf('<use href="#%s" transform="translate(%s,%s) scale(%s)" />' . PHP_EOL, $fc, ((CARD_BLEED_W-(100*$scl))/3), ((CARD_BLEED_H-(100*$scl))/4)+$offset, $scl);
  $r .= sprintf('<use href="#%s" transform="translate(%s,%s) scale(%s)" />' . PHP_EOL, $fc, ((CARD_BLEED_W-(100*$scl))/3*2), ((CARD_BLEED_H-(100*$scl))/4)+$offset, $scl);
  return pips_mirror( $r );
}

function pips_6($fc, $scl) {
  return pips_mirror( sprintf('<use href="#%s" transform="translate(%s,%s) scale(%s)" />' . PHP_EOL, $fc, ((CARD_BLEED_W-(100*$scl))/3), ((CARD_BLEED_H-(100*$scl))/2), $scl) );
}

function pips_7($fc, $scl) {
  return pips_mirror( sprintf('<use href="#%s" transform="translate(%s,%s) scale(%s)" />' . PHP_EOL, $fc, ((CARD_BLEED_W-(100*$scl))/2), ((CARD_BLEED_H-(100*$scl))/7*2.1), $scl) );
}

function pips_8($fc, $scl) {
  return pips_mirror( sprintf('<use href="#%s" transform="translate(%s,%s) scale(%s)" />' . PHP_EOL, $fc, ((CARD_BLEED_W-(100*$scl))/2), ((CARD_BLEED_H-(100*$scl))/7*2.333), $scl) );
}

switch ($p2) {
  case '1':
    if ($card == 1) {
      $svg .= '<!-- Ace Of Spades -->';
      // Pip
      $svg .= sprintf('<use href="#a" transform="translate(%s,%s)" />' . PHP_EOL,
        (CARD_BLEED_W-ACE_W)/2, (CARD_BLEED_H-ACE_H)/2 );
      // Bisca Word
      $svg .= sprintf('<use href="#b" transform="translate(%s,%s)" />' . PHP_EOL,
        (CARD_BLEED_W-ACE_W)/2, ((CARD_BLEED_H-ACE_INF_H)/2)-((RYL_SQ_H-ACE_INF_H)/2)+(RYL_BX_W*3) );
      // Copyright
      $svg .= sprintf('<use href="#i" transform="translate(%s,%s)" />' . PHP_EOL,
        (CARD_BLEED_W-ACE_W)/2, ((CARD_BLEED_H-ACE_INF_H)/2)+((RYL_SQ_H-ACE_INF_H)/2)-(RYL_BX_W*3) );
    } else {
      $scl = 5;
      $svg .= pips_1($p1, $scl);
    }
    break;
  case '2':
    $svg .= pips_2($p1, $scl);
    break;
  case '3':
    $svg .= pips_1($p1, $scl);
    $svg .= pips_2($p1, $scl);
    break;
  case '4':
    $svg .= pips_4($p1, $scl, CARD_BLEED_H/13);
    break;
  case '5':
    $svg .= pips_4($p1, $scl);
    $svg .= pips_1($p1, $scl);
    break;
  case '6':
    $svg .= pips_4($p1, $scl);
    $svg .= pips_6($p1, $scl);
    break;
  case '7':
    $svg .= pips_1($p1, $scl);
    $svg .= pips_2($p1, $scl, -(CARD_BLEED_H/19));
    $svg .= pips_4($p1, $scl, (CARD_BLEED_H/12));
    break;
  case '8':
    // $svg .= pips_4($p1, $scl, CARD_BLEED_H/19*2.25);
    $svg .= pips_4($p1, $scl, -(CARD_BLEED_H/19));
    $svg .= pips_6($p1, $scl);
    $svg .= pips_8($p1, $scl);
    break;
  case '9':
    $svg .= pips_4($p1, $scl, CARD_BLEED_H/19*2.25);
    $svg .= pips_4($p1, $scl, -(CARD_BLEED_H/19));
    $svg .= pips_1($p1, $scl);
    break;
  case '0':
    $svg .= pips_4($p1, $scl, CARD_BLEED_H/19*2.666);
    $svg .= pips_4($p1, $scl, -(CARD_BLEED_H/19));
    $svg .= pips_7($p1, $scl);
    break;
}
$svg .= '</g>' . PHP_EOL;

// ----------------------------------------------------------------------
// Royal Faces
// ----------------------------------------------------------------------

if (strpos('jqk', $p2) !== false || $card > 52) {
  // face
  $temp = sprintf('<use href="#f" fill="none" stroke="%s" stroke-width="%s" />' . PHP_EOL,
    $box_color, 6);
  if ($card <= 52) {
    // pip in top right
    $temp .= sprintf('<use href="#%s" fill="%s" transform="translate(%s %s)" />' . PHP_EOL,
      $p1, $box_color /* $colors[$p1] */, RYL_SQ_W-RYL_BX_W-100-5, RYL_BX_W);
    // traditional royal values in top left
    $temp .= sprintf('<text fill="%s" font-size="%s" font-weight="bold" x="%s" y="%s">%s</text>',
      $box_color, 32, 5, 32, ($p2 == 'j' ? '11' : ($p2 == 'q' ? '10' : ($p2 == 'k' ? '12' : ''))));
  }

  // face halves
  $svg .= '<!-- Royal face -->' . PHP_EOL;
  $svg .= sprintf('<g transform="translate(%s,%s)">' . PHP_EOL,
    (CARD_BLEED_W-(RYL_FC_W))/2, (CARD_BLEED_H-RYL_FC_H)/2);
  $svg .= $temp; // face 1st half 1/2
  // alternate A if there
  $svg .= sprintf('<use href="#alt_%s" fill="none" stroke="%s" stroke-width="%s" />' . PHP_EOL,
    ($card <= 52 ? $p1 : '1'), $box_color, 6);
  $svg .= '</g>' . PHP_EOL;
  $svg .= sprintf('<g transform="rotate(180 %s %s) translate(%s,%s)">' . PHP_EOL,
    CARD_BLEED_W/2, CARD_BLEED_H/2, (CARD_BLEED_W-RYL_FC_W)/2, (CARD_BLEED_H-RYL_FC_H)/2);
  $svg .= $temp; // face 2nd half 1/2
  // alternate B if there
  $svg .= sprintf('<use href="#alt_%s" fill="none" stroke="%s" stroke-width="%s" />' . PHP_EOL,
    ($card <= 52 ? $p1 : '2'), $box_color, 6);
  $svg .= '</g>' . PHP_EOL;
}

// ----------------------------------------------------------------------
// Bisca Values
// ----------------------------------------------------------------------

if (strpos('17890jqk', $p2) !== false) {
  $svg .= '<g fill="' . $colors[$p1] . '" opacity="0.333">' . PHP_EOL;

  function bisca_val($val) {
    $s = $r = sprintf('<use href="#%s" transform="translate(%s,%s) scale(0.666)" />' . PHP_EOL,
      $val, 72, 250);
    $r .= sprintf('<g transform="rotate(180 %s %s)">', CARD_BLEED_W/2, CARD_BLEED_H/2) . PHP_EOL;
    $r .= $s;
    $r .= '</g>' . PHP_EOL;
    return $r;
  }

  switch ($p2) {
    case '1':
      $svg .= bisca_val('u');
      break;
    case '7':
      $svg .= bisca_val('v');
      break;
    case '8':
    case '9':
    case '0':
      $svg .= bisca_val('t');
      break;
    case 'k':
      $svg .= bisca_val('x');
      break;
    case 'j':
      $svg .= bisca_val('y');
      break;
    case 'q':
      $svg .= bisca_val('z');
      break;
  }

  $svg .= '</g>' . PHP_EOL;
}

// Print it!
echo $svg;

if ($debug) render_debug();

?>
</svg>
<?php /*

*/
